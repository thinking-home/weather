### YamlMime:ManagedReference
items:
- uid: ThinkingHome.Weather.Api.YandexWeatherClient
  commentId: T:ThinkingHome.Weather.Api.YandexWeatherClient
  id: YandexWeatherClient
  parent: ThinkingHome.Weather.Api
  children:
  - ThinkingHome.Weather.Api.YandexWeatherClient.#ctor(System.String,Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient})
  - ThinkingHome.Weather.Api.YandexWeatherClient.#ctor(System.String[],Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient})
  - ThinkingHome.Weather.Api.YandexWeatherClient.Dispose
  - ThinkingHome.Weather.Api.YandexWeatherClient.GetForecast(System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: YandexWeatherClient
  nameWithType: YandexWeatherClient
  fullName: ThinkingHome.Weather.Api.YandexWeatherClient
  type: Class
  assemblies:
  - ThinkingHome.Weather.Api
  namespace: ThinkingHome.Weather.Api
  summary: >-
    Этот класс предоставляет API для получения данных о погоде из API

    сервиса <a href="https://yandex.ru/dev/weather/doc/ru/concepts/weather-data-api">Яндекс Погода</a>.

    Для работы вам понадобится ключ доступа,

    который можно получить в <a href="https://yandex.ru/pogoda/b2b/console/smarthome">личном кабинете</a>.
  example: []
  syntax:
    content: 'public class YandexWeatherClient : IDisposable'
    content.vb: Public Class YandexWeatherClient Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ThinkingHome.Weather.Api.YandexWeatherClient.#ctor(System.String[],Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient})
  commentId: M:ThinkingHome.Weather.Api.YandexWeatherClient.#ctor(System.String[],Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient})
  id: '#ctor(System.String[],Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient})'
  parent: ThinkingHome.Weather.Api.YandexWeatherClient
  langs:
  - csharp
  - vb
  name: YandexWeatherClient(string[], ILogger<YandexWeatherClient>?)
  nameWithType: YandexWeatherClient.YandexWeatherClient(string[], ILogger<YandexWeatherClient>?)
  fullName: ThinkingHome.Weather.Api.YandexWeatherClient.YandexWeatherClient(string[], Microsoft.Extensions.Logging.ILogger<ThinkingHome.Weather.Api.YandexWeatherClient>?)
  type: Constructor
  assemblies:
  - ThinkingHome.Weather.Api
  namespace: ThinkingHome.Weather.Api
  summary: Создает экземпляр класса <code>YandexWeatherClient</code>
  example: []
  syntax:
    content: public YandexWeatherClient(string[] apiKeys, ILogger<YandexWeatherClient>? logger = null)
    parameters:
    - id: apiKeys
      type: System.String[]
      description: Массив ключей доступа к API Яндекс Погоды
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient}
      description: Интерфейс для записи информации в журнал событий (опциональный параметр)
    content.vb: Public Sub New(apiKeys As String(), logger As ILogger(Of YandexWeatherClient) = Nothing)
  overload: ThinkingHome.Weather.Api.YandexWeatherClient.#ctor*
  nameWithType.vb: YandexWeatherClient.New(String(), ILogger(Of YandexWeatherClient))
  fullName.vb: ThinkingHome.Weather.Api.YandexWeatherClient.New(String(), Microsoft.Extensions.Logging.ILogger(Of ThinkingHome.Weather.Api.YandexWeatherClient))
  name.vb: New(String(), ILogger(Of YandexWeatherClient))
- uid: ThinkingHome.Weather.Api.YandexWeatherClient.#ctor(System.String,Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient})
  commentId: M:ThinkingHome.Weather.Api.YandexWeatherClient.#ctor(System.String,Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient})
  id: '#ctor(System.String,Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient})'
  parent: ThinkingHome.Weather.Api.YandexWeatherClient
  langs:
  - csharp
  - vb
  name: YandexWeatherClient(string, ILogger<YandexWeatherClient>?)
  nameWithType: YandexWeatherClient.YandexWeatherClient(string, ILogger<YandexWeatherClient>?)
  fullName: ThinkingHome.Weather.Api.YandexWeatherClient.YandexWeatherClient(string, Microsoft.Extensions.Logging.ILogger<ThinkingHome.Weather.Api.YandexWeatherClient>?)
  type: Constructor
  assemblies:
  - ThinkingHome.Weather.Api
  namespace: ThinkingHome.Weather.Api
  summary: Создает экземпляр класса <code>YandexWeatherClient</code>
  example: []
  syntax:
    content: public YandexWeatherClient(string apiKey, ILogger<YandexWeatherClient>? logger = null)
    parameters:
    - id: apiKey
      type: System.String
      description: Ключ доступа к API Яндекс Погоды
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient}
      description: Интерфейс для записи информации в журнал событий (опциональный параметр)
    content.vb: Public Sub New(apiKey As String, logger As ILogger(Of YandexWeatherClient) = Nothing)
  overload: ThinkingHome.Weather.Api.YandexWeatherClient.#ctor*
  nameWithType.vb: YandexWeatherClient.New(String, ILogger(Of YandexWeatherClient))
  fullName.vb: ThinkingHome.Weather.Api.YandexWeatherClient.New(String, Microsoft.Extensions.Logging.ILogger(Of ThinkingHome.Weather.Api.YandexWeatherClient))
  name.vb: New(String, ILogger(Of YandexWeatherClient))
- uid: ThinkingHome.Weather.Api.YandexWeatherClient.Dispose
  commentId: M:ThinkingHome.Weather.Api.YandexWeatherClient.Dispose
  id: Dispose
  parent: ThinkingHome.Weather.Api.YandexWeatherClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: YandexWeatherClient.Dispose()
  fullName: ThinkingHome.Weather.Api.YandexWeatherClient.Dispose()
  type: Method
  assemblies:
  - ThinkingHome.Weather.Api
  namespace: ThinkingHome.Weather.Api
  summary: >-
    Выполняет определенные приложением задачи, связанные с освобождением, разгружением

    или сбросом неуправляемых ресурсов.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: ThinkingHome.Weather.Api.YandexWeatherClient.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: ThinkingHome.Weather.Api.YandexWeatherClient.GetForecast(System.Single,System.Single)
  commentId: M:ThinkingHome.Weather.Api.YandexWeatherClient.GetForecast(System.Single,System.Single)
  id: GetForecast(System.Single,System.Single)
  parent: ThinkingHome.Weather.Api.YandexWeatherClient
  langs:
  - csharp
  - vb
  name: GetForecast(float, float)
  nameWithType: YandexWeatherClient.GetForecast(float, float)
  fullName: ThinkingHome.Weather.Api.YandexWeatherClient.GetForecast(float, float)
  type: Method
  assemblies:
  - ThinkingHome.Weather.Api
  namespace: ThinkingHome.Weather.Api
  summary: Получает данные о погоде в заданном месте Земли
  example: []
  syntax:
    content: public Task<ForecastResponse> GetForecast(float lat, float lon)
    parameters:
    - id: lat
      type: System.Single
      description: Широта
    - id: lon
      type: System.Single
      description: Долгота
    return:
      type: System.Threading.Tasks.Task{ThinkingHome.Weather.Api.Model.ForecastResponse}
    content.vb: Public Function GetForecast(lat As Single, lon As Single) As Task(Of ForecastResponse)
  overload: ThinkingHome.Weather.Api.YandexWeatherClient.GetForecast*
  exceptions:
  - type: ThinkingHome.Weather.Api.NoValidApiKeysException
    commentId: T:ThinkingHome.Weather.Api.NoValidApiKeysException
    description: >-
      Исключение произойдет, если нет действительных ключей доступа к API (например, на всех переданных ключах

      превышен лимит запросов)
  nameWithType.vb: YandexWeatherClient.GetForecast(Single, Single)
  fullName.vb: ThinkingHome.Weather.Api.YandexWeatherClient.GetForecast(Single, Single)
  name.vb: GetForecast(Single, Single)
references:
- uid: ThinkingHome.Weather.Api
  commentId: N:ThinkingHome.Weather.Api
  href: ThinkingHome.html
  name: ThinkingHome.Weather.Api
  nameWithType: ThinkingHome.Weather.Api
  fullName: ThinkingHome.Weather.Api
  spec.csharp:
  - uid: ThinkingHome
    name: ThinkingHome
    href: ThinkingHome.html
  - name: .
  - uid: ThinkingHome.Weather
    name: Weather
    href: ThinkingHome.Weather.html
  - name: .
  - uid: ThinkingHome.Weather.Api
    name: Api
    href: ThinkingHome.Weather.Api.html
  spec.vb:
  - uid: ThinkingHome
    name: ThinkingHome
    href: ThinkingHome.html
  - name: .
  - uid: ThinkingHome.Weather
    name: Weather
    href: ThinkingHome.Weather.html
  - name: .
  - uid: ThinkingHome.Weather.Api
    name: Api
    href: ThinkingHome.Weather.Api.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ThinkingHome.Weather.Api.YandexWeatherClient.#ctor*
  commentId: Overload:ThinkingHome.Weather.Api.YandexWeatherClient.#ctor
  href: ThinkingHome.Weather.Api.YandexWeatherClient.html#ThinkingHome_Weather_Api_YandexWeatherClient__ctor_System_String___Microsoft_Extensions_Logging_ILogger_ThinkingHome_Weather_Api_YandexWeatherClient__
  name: YandexWeatherClient
  nameWithType: YandexWeatherClient.YandexWeatherClient
  fullName: ThinkingHome.Weather.Api.YandexWeatherClient.YandexWeatherClient
  nameWithType.vb: YandexWeatherClient.New
  fullName.vb: ThinkingHome.Weather.Api.YandexWeatherClient.New
  name.vb: New
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient}
  commentId: T:Microsoft.Extensions.Logging.ILogger{ThinkingHome.Weather.Api.YandexWeatherClient}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<YandexWeatherClient>
  nameWithType: ILogger<YandexWeatherClient>
  fullName: Microsoft.Extensions.Logging.ILogger<ThinkingHome.Weather.Api.YandexWeatherClient>
  nameWithType.vb: ILogger(Of YandexWeatherClient)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of ThinkingHome.Weather.Api.YandexWeatherClient)
  name.vb: ILogger(Of YandexWeatherClient)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: ThinkingHome.Weather.Api.YandexWeatherClient
    name: YandexWeatherClient
    href: ThinkingHome.Weather.Api.YandexWeatherClient.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: ThinkingHome.Weather.Api.YandexWeatherClient
    name: YandexWeatherClient
    href: ThinkingHome.Weather.Api.YandexWeatherClient.html
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ThinkingHome.Weather.Api.YandexWeatherClient.Dispose*
  commentId: Overload:ThinkingHome.Weather.Api.YandexWeatherClient.Dispose
  href: ThinkingHome.Weather.Api.YandexWeatherClient.html#ThinkingHome_Weather_Api_YandexWeatherClient_Dispose
  name: Dispose
  nameWithType: YandexWeatherClient.Dispose
  fullName: ThinkingHome.Weather.Api.YandexWeatherClient.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: ThinkingHome.Weather.Api.NoValidApiKeysException
  commentId: T:ThinkingHome.Weather.Api.NoValidApiKeysException
  href: ThinkingHome.Weather.Api.NoValidApiKeysException.html
  name: NoValidApiKeysException
  nameWithType: NoValidApiKeysException
  fullName: ThinkingHome.Weather.Api.NoValidApiKeysException
- uid: ThinkingHome.Weather.Api.YandexWeatherClient.GetForecast*
  commentId: Overload:ThinkingHome.Weather.Api.YandexWeatherClient.GetForecast
  href: ThinkingHome.Weather.Api.YandexWeatherClient.html#ThinkingHome_Weather_Api_YandexWeatherClient_GetForecast_System_Single_System_Single_
  name: GetForecast
  nameWithType: YandexWeatherClient.GetForecast
  fullName: ThinkingHome.Weather.Api.YandexWeatherClient.GetForecast
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Threading.Tasks.Task{ThinkingHome.Weather.Api.Model.ForecastResponse}
  commentId: T:System.Threading.Tasks.Task{ThinkingHome.Weather.Api.Model.ForecastResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ForecastResponse>
  nameWithType: Task<ForecastResponse>
  fullName: System.Threading.Tasks.Task<ThinkingHome.Weather.Api.Model.ForecastResponse>
  nameWithType.vb: Task(Of ForecastResponse)
  fullName.vb: System.Threading.Tasks.Task(Of ThinkingHome.Weather.Api.Model.ForecastResponse)
  name.vb: Task(Of ForecastResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: ThinkingHome.Weather.Api.Model.ForecastResponse
    name: ForecastResponse
    href: ThinkingHome.Weather.Api.Model.ForecastResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: ThinkingHome.Weather.Api.Model.ForecastResponse
    name: ForecastResponse
    href: ThinkingHome.Weather.Api.Model.ForecastResponse.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
